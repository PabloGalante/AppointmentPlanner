{"ast":null,"code":"var _jsxFileName = \"/Users/pablogalante/Documentos/Programacion/Projects/CodeAcademy Full Stack Engineer/Appointment Planner (React)/src/components/contactPicker/ContactPicker.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = props => {\n  const contactsArray = [props.contacts];\n  const contactOnChange = props.onChange;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: contactOnChange,\n    children: contactsArray.map((contact, index) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: contact.name,\n        children: [\"\\\"\", contact.name, \"\\\"\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"sources":["/Users/pablogalante/Documentos/Programacion/Projects/CodeAcademy Full Stack Engineer/Appointment Planner (React)/src/components/contactPicker/ContactPicker.js"],"names":["React","ContactPicker","props","contactsArray","contacts","contactOnChange","onChange","map","contact","index","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAEtC,QAAMC,aAAa,GAAG,CAACD,KAAK,CAACE,QAAP,CAAtB;AACA,QAAMC,eAAe,GAAGH,KAAK,CAACI,QAA9B;AAEA,sBACE;AAAQ,IAAA,QAAQ,EAAED,eAAlB;AAAA,cACGF,aAAa,CAACI,GAAd,CAAmB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,0BAAO;AAAQ,QAAA,KAAK,EAAED,OAAO,CAACE,IAAvB;AAAA,yBAA2CF,OAAO,CAACE,IAAnD;AAAA,SAAkCD,KAAlC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZM;KAAMR,a","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n\r\n  const contactsArray = [props.contacts];\r\n  const contactOnChange = props.onChange;\r\n\r\n  return (\r\n    <select onChange={contactOnChange}>\r\n      {contactsArray.map( (contact, index) => {\r\n        return <option value={contact.name} key={index}>\"{contact.name}\"</option>\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}