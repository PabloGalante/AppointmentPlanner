{"ast":null,"code":"var _jsxFileName = \"/Users/pablogalante/Documentos/Programacion/Projects/CodeAcademy Full Stack Engineer/Appointment Planner (React)/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Switch, Route, Redirect, NavLink, BrowserRouter as Router } from \"react-router-dom\";\nimport { useState } from 'react';\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contactsData, setContact] = useState([]);\n  const [appointmentsData, setAppointment] = useState([]);\n  const ROUTES = {\n    CONTACTS: \"/contacts\",\n    APPOINTMENTS: \"/appointments\"\n  };\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n\n  const setNewContact = (name, phone, email) => {\n    setContact([...contactsData, {\n      name: name,\n      phone: phone,\n      email: email\n    }]);\n  };\n\n  const setNewAppointment = (title, contact, date, time) => {\n    setAppointment([...appointmentsData, {\n      title: title,\n      contact: contact,\n      date: date,\n      time: time\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.CONTACTS,\n        activeClassName: \"active\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.APPOINTMENTS,\n        activeClassName: \"active\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.CONTACTS,\n          children: /*#__PURE__*/_jsxDEV(ContactsPage, {\n            contacts: contactsData,\n            setNewContact: setNewContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.APPOINTMENTS,\n          children: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n            contacts: contactsData,\n            appointments: appointmentsData,\n            setNewAppointment: setNewAppointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"XOyoEoV0EQAjpGhLvVVrP/p3p8U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pablogalante/Documentos/Programacion/Projects/CodeAcademy Full Stack Engineer/Appointment Planner (React)/src/App.js"],"names":["React","Switch","Route","Redirect","NavLink","BrowserRouter","Router","useState","AppointmentsPage","ContactsPage","App","contactsData","setContact","appointmentsData","setAppointment","ROUTES","CONTACTS","APPOINTMENTS","setNewContact","name","phone","email","setNewAppointment","title","contact","date","time"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,OAAlC,EAA2CC,aAAa,IAAIC,MAA5D,QAA0E,kBAA1E;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,gBAAT,QAAiC,gDAAjC;AACA,SAASC,YAAT,QAA6B,wCAA7B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACF;AACA;AACA;AAEE,QAAM,CAAEC,YAAF,EAAgBC,UAAhB,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAEM,gBAAF,EAAoBC,cAApB,IAAuCP,QAAQ,CAAC,EAAD,CAArD;AAEA,QAAMQ,MAAM,GAAG;AACbC,IAAAA,QAAQ,EAAE,WADG;AAEbC,IAAAA,YAAY,EAAE;AAFD,GAAf;AAKA;AACF;AACA;AACA;;AAEE,QAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,KAAwB;AAC5CT,IAAAA,UAAU,CAAC,CAAC,GAAGD,YAAJ,EACT;AACEQ,MAAAA,IAAI,EAAEA,IADR;AAEEC,MAAAA,KAAK,EAAEA,KAFT;AAGEC,MAAAA,KAAK,EAAEA;AAHT,KADS,CAAD,CAAV;AAOD,GARD;;AAUA,QAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,KAAgC;AACxDZ,IAAAA,cAAc,CAAC,CAAC,GAAGD,gBAAJ,EACb;AACEU,MAAAA,KAAK,EAAEA,KADT;AAEEC,MAAAA,OAAO,EAAEA,OAFX;AAGEC,MAAAA,IAAI,EAAEA,IAHR;AAIEC,MAAAA,IAAI,EAAEA;AAJR,KADa,CAAD,CAAd;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAEX,MAAM,CAACC,QAApB;AAA8B,QAAA,eAAe,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAED,MAAM,CAACE,YAApB;AAAkC,QAAA,eAAe,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEF,MAAM,CAACC,QAApB;AAAA,iCAEE,QAAC,YAAD;AAAc,YAAA,QAAQ,EAAEL,YAAxB;AAAsC,YAAA,aAAa,EAAEO;AAArD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEH,MAAM,CAACE,YAApB;AAAA,iCAEE,QAAC,gBAAD;AAAkB,YAAA,QAAQ,EAAEN,YAA5B;AAA0C,YAAA,YAAY,EAAEE,gBAAxD;AAA0E,YAAA,iBAAiB,EAAES;AAA7F;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAwBD;;GAhEQZ,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport { Switch, Route, Redirect, NavLink, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { useState } from 'react';\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  const [ contactsData, setContact ] = useState([]);\r\n  const [ appointmentsData, setAppointment ] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const setNewContact = (name, phone, email) => {\r\n    setContact([...contactsData, \r\n      {\r\n        name: name,\r\n        phone: phone,\r\n        email: email\r\n      }]\r\n    )\r\n  };\r\n\r\n  const setNewAppointment = (title, contact, date, time) => {\r\n    setAppointment([...appointmentsData,\r\n      {\r\n        title: title,\r\n        contact: contact,\r\n        date: date,\r\n        time: time\r\n      }]\r\n    )\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contactsData} setNewContact={setNewContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage contacts={contactsData} appointments={appointmentsData} setNewAppointment={setNewAppointment} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}